---
import { getSession } from "auth-astro/server";
import DashboardNav from "../../../components/DashboardNav.astro";
import Header from "../../../components/Header";
import Layout from "../../../layouts/Layout.astro";
import axios from "axios";
import verifyToken from "../../../lib/verifytoken";
import { signOut } from "auth-astro/client";
interface Data {
    count:number,
    next:string,
    previous:string,
    results:Array<{
        start_conversation:string,
        end_conversation:string
    }>
}
const session = await getSession(Astro.request)
const backendUrl = import.meta.env.BACKEND_URL
if (!session) {
	return Astro.redirect('/')
}
else {
	if (! await verifyToken(session.access)) {
		await signOut()
		return Astro.redirect('/')
	}
}
const data = await axios.get<Data>(`${backendUrl}/api/conversations/`, {
	headers: {
		Authorization: `Bearer ${session.access}`
	}
}).then(res => res.data).catch(err => {
	throw new Error(err)
})
---
<Layout title="GPT-Dataset Dashboard">
	<main class="min-h-svh bg-black text-white">
		<Header client:load/>
        <section class="min-h-svh container mx-auto p-4 flex-1 flex flex-col">
			<DashboardNav/>
            <div class="flex-1 basis-0 border border-gray-500 p-4 rounded-xl mt-4 ">
                <table class="w-full" style="table-layout: fixed;">
                    <thead class="">
                        <tr class="">
                            <th scope="col" class="py-3.5 text-sm font-bold text-center rtl:text-right text-white" style="width: 50%;">
                                Start Conversation
                            </th>
                            <th scope="col" class="py-3.5 text-sm font-bold text-center rtl:text-right text-white" style="width: 50%;">
                                End Conversation
                            </th>
                        </tr>
                    </thead>
                    <tbody class="">
                        {(data.results || []).map((conversation) => (
                            <tr class="border-b ">
                                <td class="text-wrap px-4 py-4 text-sm font-medium whitespace-nowrap text-gray-300">
                                    {conversation.start_conversation}
                                </td>
                                <td class="text-wrap p-4 py-4 text-sm font-medium whitespace-nowrap text-gray-300">
                                    {conversation.end_conversation}
                                </td>
                            </tr>
                        ))}
                    </tbody>
                </table>
            </div>
            
        </section>
    </main>
</Layout>